plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

static def stringValue(def value) {
    return "\"${value}\""
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.trinidad.beansanconstruction"
        minSdk 21
        targetSdk 31
        versionCode versionMajor * 100 + versionMinor * 10 + versionPatch
        versionName versionMajor + "." + versionMinor + "." + versionPatch

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters  "armeabi-v7a"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        release {
            keyAlias 'qlkj'
            keyPassword 'qlkj123456'
            storeFile file('../doc/qlkj.jks')
            storePassword 'qlkj123456'
        }
        debug {
        }
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            // 正式版本App名称
            resValue("string", "app_name", "千里科技")
            buildConfigField("String", "BASE_URL", stringValue("https://test.wj23.com.cn/bs/"))

        }

        debug {
            debuggable true
            signingConfig signingConfigs.release
            // 测试版本App名称
            resValue("string", "app_name", "千里科技测试")
            buildConfigField("String", "BASE_URL", stringValue("https://test.wj23.com.cn/bs/"))

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    // 打包重命名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // Apk重命名
            if (versionBuild == 0) {
                // 0上线版本，不带versionBuild
                outputFileName = "trinidad_technology_${defaultConfig.versionName}_${variant/*.productFlavors[0]*/.name}.apk"
            } else {
                outputFileName = "trinidad_technology_${defaultConfig.versionName}_${versionBuild}_${variant/*.productFlavors[0]*/.name}.apk"
            }
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation project(path: ':lib_base')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.github.jenly1314:zxing-lite:2.1.1'
    // CameraX core library
    implementation "androidx.camera:camera-core:1.0.2"
    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:1.0.2"
    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:1.0.2"
    // CameraX View class
    implementation 'androidx.camera:camera-view:1.0.0-alpha32'

    implementation 'com.amap.api:3dmap:9.1.0'
    //定位功能
    implementation 'com.amap.api:location:6.0.1'
    //搜索功能
    implementation 'com.amap.api:search:8.1.0'

    implementation 'com.zhihu.android:matisse:0.5.3-beta3'

    // umeng
    implementation 'com.umeng.umsdk:common:9.4.4'
    implementation 'com.umeng.umsdk:asms:1.4.1'
    implementation 'com.umeng.umsdk:apm:1.5.2'
}